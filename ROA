<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="3"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-ietf-sidrops-roa-considerations-04"
     ipr="trust200902">
  <front>
    <title abbrev="ROA considerations">Avoidance for ROA Containing Multiple IP Prefixes</title>

    <author fullname="Zhiwei Yan" initials="Z." surname="Yan">
      <organization>CNNIC</organization>

      <address>
        <postal>
          <street>No.4 South 4th Street, Zhongguancun</street>
          <city>Beijing, 100190</city>
          <country>P.R. China</country>
        </postal>
        <email>yanzhiwei@cnnic.cn</email>
      </address>
    </author>

    <author fullname="Randy Bush" initials="R." surname="Bush">
      <organization>IIJ Research Lab &amp; Arrcus, Inc.</organization>
      <address>
        <email>randy@psg.com</email>
      </address>
    </author>
    
<author fullname="Guanggang Geng" initials="G.G." surname="Geng"> 
<organization>Jinan University</organization> <address> <postal> <street>No.601, West Huangpu Avenue</street> <code>510632</code> <city>Guangzhou</city> 
<country>P.R. China</country> </postal> <email>gggeng@jnu.edu.cn</email> </address> 
</author>

   <author fullname="Ties de Kock" initials="T." surname="de Kock" >
    <organization>RIPE NCC</organization>
    <address>
        <postal>
          <street>Stationsplein 11</street>
          <city>Amsterdam</city>
          <country>Netherlands</country>
        </postal>
    <email>tdekock@ripe.net</email>
    </address>
  </author>
  
     <author fullname="Jiankang Yao" initials="J." surname="Yao" >
	  <organization>CNNIC</organization>
	  <address>
        <postal>
          <street>No.4 South 4th Street, Zhongguancun</street>
          <city>Beijing, 100190</city>
          <country>P.R. China</country>
        </postal>
	  <email>yaojk@cnnic.cn</email>
	  </address>
	</author>

	
	

    <date month="November" year="2022"/>

    <area>Operations and Management Area (ops)</area>

    <workgroup>SIDR Operations</workgroup>

    <keyword>ROA</keyword>

    <abstract>
      <t>In RPKI, the address space holder needs to issue an ROA object when authorizing one or more ASes to originate routes to IP prefix(es). During ROA issurance process, the address space holder may need to specify an origin AS for a list of IP prefixes. Additionally, the address space holder is free to choose to put multiple prefixes into a single ROA or issue separate ROAs for each prefix according to the current specification. This memo analyzes some operational problems which may arise from ROAs containing multiple IP prefixes and recommends avoiding placing multiple IP prefixes in one ROA as possible.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>In Resource Public Key Infrastructure (RPKI), Route Origin Authorization (ROA) is the digitally signed object which identifies that a single Autonomous System (AS) has been authorized by the address space holder to originate routes to one or more prefixes within the address space<xref target="RFC6482"/>.</t>

      <t>Each ROA contains an "asID" field and an "ipAddrBlocks" field. The "asID" field contains one single AS number which is authorized to originate routes to the given IP address prefixes. The "ipAddrBlocks" field contains one or more IP address prefixes to which the AS is authorized to originate the routes. If the address space holder needs to authorize more than one ASes to advertise the same set of IP prefixes, the holder must issue multiple ROAs, one for each AS number. However, at present there are no mandatory requirements describing that the address space holders must issue a separate ROA for each IP prefix or a ROA containing multiple IP Sprefixes.</t>    
   
    </section>

    <section title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>

    </section>

    <section title="Problem Statement">
              
      <t>For a Certification Authority (CA) that is incapable of using multi-element publication queries <xref target="RFC8181"/>, adding or deleting one &lt;AS, IP_Prefix&gt; pair can cause the (single) ROA for an AS to be withdrawn and reissued if the issued ROA containing multiple IP prefixes.  All IP prefixes in the single ROA share the same validation state and then this may affect the stability and security of RPKI.</t>
      
      <t>Besides, the CA certificate issued by a parent may be replaced by the parent at any time resulting in changes in resources. Any ROA object that includes resources which are a) no longer contained in the new CA certificate, or b) contained in a new CA certificate that is not yet discovered by Relying Party (RP) software, will be rejected as invalid.  CAs should carefully coordinate ROA updates with resource certificate updates. A CA can automate this process if a single entity manages both the parent CA and the CA issuing the ROAs (scenario D [<xref target="RFC8211"/> section 3]). However, in other deployment scenarios, this coordination becomes more complex. Furthermore, for the ROA containing multiple IP prefixes, the IP prefixes share the same expiry configuration. If the ROA is not reissued timely, the whole set of IP prefixes will be affected after expiry.</t>  

      <t>Using multiple ROA objects with single IP prefix also allows a CA to affect routing over time based on certificate expiry. For example, a prefix could be allowed to be originated from an AS only for a specific period of time, such as some IP prefix was leased out temporarily.</t>        
        
      </section>

    <section title="Suggestions">
      <t>The following suggestions should be considered during the process of ROA issurance:</t>

      <t>1) It's the most important to guarantee the stability and security of RPKI, and it is recommended to include a single IP prefix in each ROA in default.</t>

      <t>2) In some special scenarios, where the resource is very stable, a CA has operational problems producing increased number of individual ROAs, or to avoid the possible affects on RP performance, the CA may choose to aggregate multiple IP prefixes.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
     <t>This memo does not give rise to additional security risks.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document does not request any IANA action.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The authors would like to thanks the valuable comments made by members of sidrops WG and the list will be updated later.</t>
      <t>This work was supported by the Beijing Nova Program of Science and Technology under grant Z191100001119113.</t>
      <t>This document was produced using the xml2rfc tool <xref target="RFC2629"/>.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include='reference.RFC.2119'?>
      <?rfc include='reference.RFC.8174'?>
      <?rfc include='reference.RFC.6482'?>
      <?rfc include='reference.RFC.8211'?>
      <?rfc include='reference.RFC.8181'?>
      
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.2629'?>
    </references>
    

    
  </back>
</rfc>
